# Boost.Mock
#
# Copyright Mathieu Champlon 2012
#
# Distributed under the Boost Software License version 1.0. (See
# accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

import testing ;

project : requirements <define>BOOST_AUTO_TEST_MAIN <define>BOOST_ALL_NO_LIB ;

rule run-test ( name )
{
  run $(name).cpp undefined.cpp /boost//unit_test_framework : : : : $(name) ;
  run $(name).cpp undefined.cpp /boost//unit_test_framework : : : <define>MOCK_MAX_ARGS=21 : $(name)_max_args ;
  run $(name).cpp undefined.cpp /boost//unit_test_framework : : : <define>MOCK_USE_CONVERSIONS : $(name)_use_conversions ;
  run $(name).cpp undefined.cpp /boost//unit_test_framework : : : <define>MOCK_NO_DECLTYPE : $(name)_no_decltype ;
  run $(name).cpp undefined.cpp /boost//unit_test_framework : : : <define>MOCK_NO_VARIADIC_MACROS : $(name)_no_variadic_macros ;
}

alias mock_tests :
    [ run-test test_constraint ]
    [ run-test test_constraints ]
    [ run-test test_error ]
    [ run-test test_integration ]
    [ run-test test_log ]
    [ run-test test_matcher ]
    [ run-test test_max_args ]
    [ run-test test_mock ]
    [ run-test test_object ]
    [ run-test test_sequence ]
    [ run-test detail/test_function ]
    [ run-test detail/test_invocation ]
    [ run-test detail/test_is_functor ]
    [ run-test detail/test_type_name ]
    [ run-test detail/test_signature ]
;

alias mock_failures :
    [ compile-fail fail_ambiguous_mock_method.cpp ]
    [ compile-fail fail_constraint_functor_not_compatible.cpp ]
    [ compile-fail fail_constraint_value_not_comparable.cpp ]
    [ compile-fail fail_constraint_value_of_wrong_type_in_builtin_constraint.cpp ]
    [ compile-fail fail_mismatch_type_in_returns_int_action.cpp ]
    [ compile-fail fail_mismatch_type_in_returns_string_action.cpp ]
    [ compile-fail fail_mismatch_type_in_returns_void_action.cpp ]
    [ compile-fail fail_non_existing_base_class_method_in_mock_method.cpp ]
    [ compile-fail fail_number_of_arguments_greater_than_max_constant.cpp ]
    [ compile-fail fail_template_argument_without_tpl_macro.cpp ]
    [ compile-fail fail_too_many_arguments_in_mock_method.cpp ]
    [ compile-fail fail_wrong_number_of_arguments_in_with.cpp ]
;

# How to time bench_*.cpp compilation ?
